<!DOCTYPE html>
<html lang="en">

<head>
    <title>TODO list in PHP</title>
    <!-- External resources: CSS and JS libraries -->
    <link rel="stylesheet" href="src/input.css">
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link href="https://fonts.googleapis.com/css2?family=Montserrat&display=swap" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.0/jquery.min.js"></script>
</head>

<body style="background-color: #F9F5F6;">
<section class="container mx-auto py-8 px-4" x-data="mainApp()" x-init="init" style="background-color: #F9F5F6;">
    <!-- Application Header with Frame -->
    <div class="frame bg-gradient-to-r from-teal-500 to-sky-500 rounded-lg shadow-md p-4 text-white">
        <h1 class="header text-4xl font-bold text-center mb-0">Task Trek</h1>
    </div>

    <!-- Todo List -->
        <!-- Template for each todo item -->
        <template x-for="(todo, index) in todos" :key="todo.id">
            <li :key="todo.id" class="flex items-center justify-between px-4 py-2 rounded-lg border border-gray-200"
                x-bind:data-id="todo.id">
                <div class="flex items-center space-x-2 flex-grow">
                    <!-- Task status toggle button -->
                    <button class="h-8 w-8 rounded-full flex items-center justify-center transition-colors duration-300 focus:outline-none shadow-md border-2 border-teal-500"
                        :class="{'bg-teal-500': todo.status === 1, 'border-teal-500': todo.status === 0}"
                        x-on:click="toggleTodoStatus(todo.id)">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"
                            stroke="currentColor" class="h-5 w-5 text-white">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M5 13l4 4L19 7"></path>
                        </svg>
                    </button>
                    <!-- Task text/input field -->
                    <template x-if="editingTodoId === todo.id">
                        <input type="text" x-model="todo.task"
                            class="flex-1 px-4 py-2 border rounded-lg focus:outline-none focus:ring focus:border-teal-500 shadow-md text-gray-800 bg-gray-100">
                        <input type="date" x-model="todo.dueDate" class="flex-1 px-4 py-2 border rounded-lg focus:outline-none focus:ring focus:border-teal-500 shadow-md text-gray-800 bg-gray-100">
                    </template>
                    <template x-if="editingTodoId !== todo.id">
    <div class="todo-txt todo-text flex-1" x-bind:class="{'line-through': todo.status === 1}"
        x-text="todo.task"></div>
    <div class="due-date" x-text="todo.dueDate" x-show="todo.dueDate" class="text-sm text-gray-500"></div>
</template>
          </div>
          <div class="flex items-center space-x-2">
<!-- Due Date Display -->
<template x-if="editingTodoId !== todo.id">
  <div class="due-date text-sm text-gray-500" x-text="todo.dueDate" x-show="todo.dueDate" x-on:click="editTodoDueDate(todo.id)"></div>
</template>

<!-- Due Date Input -->
<template x-if="editingTodoId === todo.id">
  <input type="date" x-model="todo.dueDate" class="flex-1 px-4 py-2 border rounded-lg focus:outline-none focus:ring focus:border-teal-500 shadow-md text-gray-800 bg-gray-100" x-on:blur="updateTodoDueDate(todo.id)">
</template>



    <!-- Edit and Update buttons -->
    <template x-if="editingTodoId === todo.id">
        <button class="edit-btn bg-gradient-to-r from-teal-500 to-sky-500 hover:from-teal-600 hover:to-sky-600 text-white font-bold text-lg py-2 px-4 rounded shadow-md transition-colors duration-300 focus:outline-none" x-on:click="updateTodo(todo.id)">Update</button>
        <button class="edit-btn bg-gradient-to-r from-teal-500 to-sky-500 hover:from-teal-600 hover:to-sky-600 text-white font-bold text-lg py-2 px-4 rounded shadow-md transition-colors duration-300 focus:outline-none" x-on:click="cancelEdit(todo.id)">Cancel</button>
    </template>
    <template x-if="editingTodoId !== todo.id">
        <button class="edit-btn bg-sky-400 hover:bg-sky-500 text-white font-bold text-lg py-2 px-4 rounded shadow-md transition-colors duration-300 focus:outline-none" x-on:click="editTodo(todo.id)">Edit</button>
    </template>

    <!-- Delete button -->
    <button class="delete-btn bg-red-600 hover:bg-red-700 text-white font-bold text-lg py-2 px-4 rounded shadow-md transition-colors duration-300 focus:outline-none" x-on:click="deleteTodoModal(todo.id)">Delete</button>
</div>

            </li>
        </template>
    </ul>

   <!-- Element to display the error message -->
   <div id="errorMessage" class="error-message bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative" role="alert" style="display: none;">
    <strong class="font-bold">Error!</strong>
    <span class="block sm:inline"></span>
    <span class="absolute top-0 bottom-0 right-0 px-4 py-3">
        <svg class="fill-current h-6 w-6 text-red-500" role="button" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><title>Close</title><path d="M14.348 14.849a1.2 1.2 0 0 1-1.697 0L10 11.819l-2.651 3.029a1.2 1.2 0 1 1-1.697-1.697l2.758-3.15-2.759-3.152a1.2 1.2 0 1 1 1.697-1.697L10 8.183l2.651-3.031a1.2 1.2 0 1 1 1.697 1.697l-2.758 3.152 2.758 3.15a1.2 1.2 0 0 1 0 1.698z"></path></svg>
    </span>
</div>



<!-- Add new task input field and button -->
<div class="flex items-center space-x-4 mt-6">
    <input type="text" x-model="newTask" placeholder="Enter a new task"
        class="flex-1 px-4 py-2 border rounded-lg focus:outline-none focus:ring focus:border-teal-500 shadow-md text-gray-800 bg-gray-100">
    <!-- Due Date Input for adding a new task -->
    <input type="date" x-model="newDueDate"
        class="flex-1 px-4 py-2 border rounded-lg focus:outline-none focus:ring focus:border-teal-500 shadow-md text-gray-800 bg-gray-100">
    <button class="add-btn bg-gradient-to-r from-teal-500 to-sky-500 hover:from-teal-600 hover:to-sky-600 text-white font-bold text-lg py-2 px-4 rounded shadow-md transition-colors duration-300 focus:outline-none"
        x-on:click="addTodo">Add Task</button>
</div>


    <!-- Modal Dialog -->
    <div class="modal" x-cloak x-show="isModalOpen" style="display: none;">
        <div class="modal-content bg-white rounded-lg shadow-md p-4">
            <p class="text-xl font-semibold text-gray-800 mb-4">Are you sure you want to delete this todo?</p>
            <div class="flex justify-end">
                <button class="modal-close text-gray-600 hover:text-gray-800 font-bold text-lg focus:outline-none"
                    @click="closeModal">Ã— Close</button>
                <!-- Confirm delete button -->
                <button class="delete-btn bg-red-600 hover:bg-red-700 text-white font-bold text-lg py-2 px-4 rounded shadow-md transition-colors duration-300 focus:outline-none ml-4"
                    @click="deleteConfirmed(todoToDelete)">Delete</button>
            </div>
        </div>
    </div>
</section>


    <script src="app.js"></script>
    <script src="https://unpkg.com/alpinejs@3.12.3/dist/cdn.min.js" defer></script>
</body>

</html>
